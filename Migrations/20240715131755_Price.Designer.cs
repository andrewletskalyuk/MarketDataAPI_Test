// <auto-generated />
using System;
using MarketDataAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarketDataAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240715131755_Price")]
    partial class Price
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarketDataAPI.Data.Entities.Instrumenty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BaseCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InstrumentyId")
                        .HasColumnType("integer");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TickSize")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentyId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("MarketDataAPI.Data.Entities.MappingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DefaultOrderSize")
                        .HasColumnType("integer");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MappingDetails");
                });

            modelBuilder.Entity("MarketDataAPI.Data.Entities.Mappings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveTickId")
                        .HasColumnType("integer");

                    b.Property<int>("InstrumentyId")
                        .HasColumnType("integer");

                    b.Property<int?>("OandaId")
                        .HasColumnType("integer");

                    b.Property<int?>("SimulationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ActiveTickId");

                    b.HasIndex("OandaId");

                    b.HasIndex("SimulationId");

                    b.ToTable("Mappings");
                });

            modelBuilder.Entity("MarketDataAPI.Data.Entities.Instrumenty", b =>
                {
                    b.HasOne("MarketDataAPI.Data.Entities.Mappings", "Mappings")
                        .WithMany()
                        .HasForeignKey("InstrumentyId");

                    b.Navigation("Mappings");
                });

            modelBuilder.Entity("MarketDataAPI.Data.Entities.Mappings", b =>
                {
                    b.HasOne("MarketDataAPI.Data.Entities.MappingDetails", "ActiveTick")
                        .WithMany()
                        .HasForeignKey("ActiveTickId");

                    b.HasOne("MarketDataAPI.Data.Entities.MappingDetails", "Oanda")
                        .WithMany()
                        .HasForeignKey("OandaId");

                    b.HasOne("MarketDataAPI.Data.Entities.MappingDetails", "Simulation")
                        .WithMany()
                        .HasForeignKey("SimulationId");

                    b.Navigation("ActiveTick");

                    b.Navigation("Oanda");

                    b.Navigation("Simulation");
                });
#pragma warning restore 612, 618
        }
    }
}
